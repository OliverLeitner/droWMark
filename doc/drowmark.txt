*drowmark.txt* Post to WordPress using MarkDown
*drowmark*

             ___             __      __  _____                __~
          __/ _/______  ____/  \    /  \/     \ _____ _______|  | __~
         / __ |\_  __ \/  _ \   \/\/   /  \ /  \\__  \\_  __ \  |/ /~
        / /_/ | |  | \/  <_> )        /    Y    \/ __ \|  | \/    <~
        \____ | |__|   \____/ \__/\  /\____|__  /____  |__|  |__|_ \~
             \/                    \/         \/     \/           \/~

            Post to WordPress using Pandoc flavoured Markdown!~
                            Without exiting Vim!~

==============================================================================
CONTENTS                                                   *drowmark-contents*

    1. User guide ................................|drowmark-guide|
        1.2 Quick Start...........................|drowmark-quickstart|
        1.2 Upload Images.........................|drowmark-image|
    2. Functionality..............................|drowmark-functionality|
        2.1 Python file...........................|drowmark-python|
    3. Commands...................................|drowmark-commands|
    4. Template Configuration.....................|drowmark-configuration|
    5. Blog Configuration.........................|drowmark-mainconfig|
    6. About......................................|drowmark-about|
    7. License....................................|drowmark-license|

==============================================================================
1. Intro                                                      *drowmark-guide*

droWMark creates WordPress posts accessing to WordPress' XML-RPC API. The
posts are written using Pandoc Flavoured MarkDown and a simple configuration
header in the top of the files.

------------------------------------------------------------------------------
1.2 Quick Start                                          *drowmark-quickstart*

Create a configuration for your wordpress blog via |:ConfigWordPress|

List all existing posts on your blog with |:ListWordPress|

Open a new buffer and run |:NewWordPress| to create a new template using 
Pandoc Flavoured Markdown.

When the blog post is done, run |:PostWordPress| to publish the new blog
entry.

To change the status of your new post to publish, run |:PublishWordpress|

To edit an existing blog post, run |:EditWordPress| and enter the id of the
post, you may find the ids with the |:ListWordPress| command mentoined above.

To write the changed blogpost back to your blog, run |:UpdateWordpress|

To delete a post, run |:DeleteWordPress|, it will ask you for the id of the
post that you want to delete, just take it from the |:ListWordPress|, the post
will be moved into the recycle bin.

------------------------------------------------------------------------------
1.3 Upload Images                                             *drowmark-image*

If the post contains images, their URL is checked when |:PostWordPress| is
called. If the URL is a relative path (from the post file) to an image, they
are automatically uploaded and URLs are changed with the uploaded content URL.

==============================================================================
2. Functionality                                      *drowmark-functionality*

This plugin allows the user post to WordPress without exiting Vim and using
Pandoc Flavoured MarkDown, which is a very powerful MarkDown implementation.

In order to publish to WordPress some extra metadata is needed, this is
included in the file with a INI style configuration part in the header,
separated from the content by a MarkDown horizontal ruler (---). See
|drowmark-configuration|.

Internally, the plugin is based on XML-RPC Python module and Pandoc. The Vim
related part is written in VimL but it only prepares the input arguments to
the Python script. It maintains the Python part completely separated from Vim
in order to allow to use the Python script as an independent program.

In order to make the plugin easier to use, it comes also with a template file
which is inserted in the current Vim file using the named |:NewWordPress|
command, this functionality is provided by Vim and it is not available from
the Python script.

On the other hand, the plugin provides some useful functionality for the user.
It provides a new `filetype`, `drowmark`, and filetype detection (`ftdetect`)
when the filename has .wp extension. It also provides some syntax highlighting
for the configuration part of the .wp files.

------------------------------------------------------------------------------
2.1 Python file                                              *drowmark-python*

Python file (plugin/drowmark.py) has all the logic of the publishing and
parsing. It is completely independent from vim and can be called directly,
allowing you to run all the commands from outside Vim.

==============================================================================
3. Commands                                                *drowmark-commands*

:ConfigWordPress                                            *:ConfigWordPress*

Generate a configuration file for your wordpress blog.

:ListWordpress                                                *:ListWordPress*

Lists all existing wordpress entries.

:EditWordpress                                                *:EditWordPress*

Edit an existing blog post.

:UpdateWordPress                                            *:UpdateWordPress*

Write the changes you made to an existing blog post back to your blog

:NewWordPress                                                  *:NewWordPress*

Appends a template at the cursor position and change the filetype to drowmark.

:PostWordPress                                                *:PostWordPress*

Post your freshly created wordpress blog entry on your blog, the default is
that the post will be saved as draft, you can change the default post status
when running :ConfigWordpress command or later on in your generated .vimblogrc 
file.

:PublishWordPress                                          *:PublishWordPress*

Set the status of your post to publish, making it available to the public.

:DeleteWordPress                                            *:DeleteWordPress*

Delete an existing wordpress blog entry, the post will be moved to the recycle
bin, so you can later on recover it.

==============================================================================
4. Template  Configuration                            *drowmark-configuration*

id                                                               *drowmark-id*

Defines the id of an existing post.
Example: >
    id = 166

title                                                         *drowmark-title*

Defines the title of the post. Example: >
    title = Mi cool blog entry about droWMark
<

status                                                        *drowmark-status*

The status of the post. Options are: `draft`, `published`, `pending`,
`private`.


categories                                                *drowmark-categories*

The category list for the post. Comma separated list. Could contain spaces.
Example: >
    categories = Category One, Cat Two
<

tags                                                            *drowmark-tags*

The tag list for the post. Comma separated list. Could contain spaces.
Example: >
    tags = markdown, wordpress, vim, plugin
<

thumbnail                                                   *drowmark-thumbnail*

The URL of Relative Path to the Post Thumbnail. If relative path, it will be
uploaded automatically.
Example: >
    thumbnail = images/thumb.jpg

==============================================================================
5. Blog Configuration                                     *drowmark-mainconfig*

url                                                              *drowmark-url*

The URL of the blog. "https://" and "/xmlrpc" will be added automatically.
Example: >
    url = www.neverslair-blog.net

username                                                    *drowmark-username*

The name of the user that is allowed to post to the blog
Example: >
    username = johndoe

password                                                    *drowmark-password*

Your blog users password
Example: >
    password = secretsexgod

categories                                                *drowmark-categories*

The list of categories that you are allowed to post in
Example: >
    categories = personal, technical, nature

article_status                                        *drowmark-article_status*

The status you are allowed to publish to
Example >
    article_status = publish

==============================================================================
6. About                                                       *drowmark-about*

    Original author and mantainer:
        Ekaitz ZÃ¡rraga (GitHub: ekaitz-zarraga)

    Modified and enhanced by:
        Oliver Leitner (Github: OliverLeitner)

    Find the latest version at GitHub:
        https://github.com/OliverLeitner/drowmark

    Find the original version at GitHub:
        https://github.com/ekaitz-zarraga/drowmark

==============================================================================
7. License                                                   *drowmark-license*

    droWMark is distributed under GPLv3 license.
    See http://www.gnu.org/licenses/gpl.html

 vim:tw=78:sw=4:ft=help:norl:
